---

---

<div
  id="background"
  class="w-full h-full opacity-25 bg-cover translate-z-8 bg-[url(map.svg)]"
>
</div>
<div
  id="static"
  class="fixed -top-1/2 -left-1/2 -right-1/2 -bottom-1/2 w-[200vw] h-[200vh] bg-repeat visible pointer-events-none bg-[url(noise-transparent.png)] animate-static"
>
</div>
<div
  id="vignette"
  class="fixed top-0 left-0 h-full w-full pointer-events-none shadow-[0_0_200px_rgba(0,0,0,0.9)_inset]"
>
</div>

<script>
  function getNormalizedMousePosition(event, element) {
    // Get the bounding rectangle of the element
    const rect = element.getBoundingClientRect();

    // Calculate the mouse position relative to the element
    const mouseX = event.clientX - rect.left; // Mouse X relative to the element
    const mouseY = event.clientY - rect.top; // Mouse Y relative to the element

    // Normalize the mouse position to a range of -1 to 1
    const normalizedX = (mouseX / rect.width) * 2 - 1; // Normalize X
    const normalizedY = (mouseY / rect.height) * 2 - 1; // Normalize Y

    return { x: normalizedX, y: -normalizedY }; // Invert Y-axis for Cartesian coordinates
  }

  const element = document.getElementById("background");
  element.addEventListener("mousemove", (event) => {
    const position = getNormalizedMousePosition(event, element);
    element.style["transform"] =
      `translateZ(30px) rotateX(${position.y}deg) rotateY(${position.x}deg)`;
  });
</script>
